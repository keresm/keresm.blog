{"version":3,"file":"static_js_components_PostSubscription_vue.js","mappings":";;;;;;;;;;;;;;;;AAA+F;AAC3B;AACL;;;AAG/D;AACA,CAA6F;AAC7F,gBAAgB,uGAAU;AAC1B,EAAE,sFAAM;AACR,EAAE,wFAAM;AACR,EAAE,iGAAe;AACjB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,IAAI,KAAU,EAAE,YAiBf;AACD;AACA,iEAAe;;;;;;;;;;;;;;;;;;;;;;;;;;AC3B6B;;AAE5C,iEAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB,mEAAe;AAClC;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,EAAC;;;;;;;;;;;;;;;;ACjDoI,CAAC,iEAAe,8IAAG,EAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEA1J;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,+BAA+B;AAC9C;AACA;AACA;AACA;AACA,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA,qBAAqB,yCAAyC;AAC9D;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,iBAAiB;AACjB;AACA,aAAa;AACb,WAAW;AACX;AACA;AACA;AACA,UAAU,SAAS,0BAA0B;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;ACxEA;;AAEA;AACA;AACA;;AAEe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","sources":["webpack://Club/./static/js/components/PostSubscription.vue","webpack://Club/static/js/components/PostSubscription.vue","webpack://Club/./static/js/components/PostSubscription.vue?aec8","webpack://Club/./static/js/components/PostSubscription.vue?a6f4","webpack://Club/./static/js/components/PostSubscription.vue?a6ef","webpack://Club/./node_modules/vue-loader/lib/runtime/componentNormalizer.js"],"sourcesContent":["import { render, staticRenderFns } from \"./PostSubscription.vue?vue&type=template&id=aaa6ba9a&\"\nimport script from \"./PostSubscription.vue?vue&type=script&lang=js&\"\nexport * from \"./PostSubscription.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/app/frontend/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('aaa6ba9a')) {\n      api.createRecord('aaa6ba9a', component.options)\n    } else {\n      api.reload('aaa6ba9a', component.options)\n    }\n    module.hot.accept(\"./PostSubscription.vue?vue&type=template&id=aaa6ba9a&\", function () {\n      api.rerender('aaa6ba9a', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"static/js/components/PostSubscription.vue\"\nexport default component.exports","<template>\n    <div :class=\"{ 'is-subscribed': isActive }\" @click.prevent=\"toggle\">\n        <span v-if=\"isLoading\">ðŸ¤”</span>\n        <input v-else type=\"checkbox\" id=\"post-subscribed\" v-model=\"isActive\" @change.prevent=\"toggle\" />\n        <label for=\"post-subscribed\">\n            <slot></slot>\n        </label>\n    </div>\n</template>\n\n<script>\nimport ClubApi from \"../common/api.service\";\n\nexport default {\n    name: \"PostSubscription\",\n    props: {\n        isActiveByDefault: {\n            type: Boolean,\n            default() {\n                return false;\n            },\n        },\n        url: {\n            type: String,\n            required: true,\n        },\n    },\n    data() {\n        return {\n            isActive: this.isActiveByDefault,\n            isLoading: false,\n        };\n    },\n    methods: {\n        toggle() {\n            this.isLoading = true;\n            return ClubApi.ajaxify(this.url, (data) => {\n                this.isLoading = false;\n\n                if (data.status === \"created\") {\n                    this.isActive = true;\n                }\n\n                if (data.status === \"deleted\") {\n                    this.isActive = false;\n                }\n            });\n        },\n    },\n};\n</script>\n","import mod from \"-!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PostSubscription.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PostSubscription.vue?vue&type=script&lang=js&\"","export * from \"-!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./PostSubscription.vue?vue&type=template&id=aaa6ba9a&\"","var render = function () {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    {\n      class: { \"is-subscribed\": _vm.isActive },\n      on: {\n        click: function ($event) {\n          $event.preventDefault()\n          return _vm.toggle($event)\n        },\n      },\n    },\n    [\n      _vm.isLoading\n        ? _c(\"span\", [_vm._v(\"ðŸ¤”\")])\n        : _c(\"input\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: _vm.isActive,\n                expression: \"isActive\",\n              },\n            ],\n            attrs: { type: \"checkbox\", id: \"post-subscribed\" },\n            domProps: {\n              checked: Array.isArray(_vm.isActive)\n                ? _vm._i(_vm.isActive, null) > -1\n                : _vm.isActive,\n            },\n            on: {\n              change: [\n                function ($event) {\n                  var $$a = _vm.isActive,\n                    $$el = $event.target,\n                    $$c = $$el.checked ? true : false\n                  if (Array.isArray($$a)) {\n                    var $$v = null,\n                      $$i = _vm._i($$a, $$v)\n                    if ($$el.checked) {\n                      $$i < 0 && (_vm.isActive = $$a.concat([$$v]))\n                    } else {\n                      $$i > -1 &&\n                        (_vm.isActive = $$a\n                          .slice(0, $$i)\n                          .concat($$a.slice($$i + 1)))\n                    }\n                  } else {\n                    _vm.isActive = $$c\n                  }\n                },\n                function ($event) {\n                  $event.preventDefault()\n                  return _vm.toggle($event)\n                },\n              ],\n            },\n          }),\n      _vm._v(\" \"),\n      _c(\n        \"label\",\n        { attrs: { for: \"post-subscribed\" } },\n        [_vm._t(\"default\")],\n        2\n      ),\n    ]\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","/* globals __VUE_SSR_CONTEXT__ */\n\n// IMPORTANT: Do NOT use ES2015 features in this file (except for modules).\n// This module is a runtime utility for cleaner component module output and will\n// be included in the final webpack user bundle.\n\nexport default function normalizeComponent(\n  scriptExports,\n  render,\n  staticRenderFns,\n  functionalTemplate,\n  injectStyles,\n  scopeId,\n  moduleIdentifier /* server only */,\n  shadowMode /* vue-cli only */\n) {\n  // Vue.extend constructor export interop\n  var options =\n    typeof scriptExports === 'function' ? scriptExports.options : scriptExports\n\n  // render functions\n  if (render) {\n    options.render = render\n    options.staticRenderFns = staticRenderFns\n    options._compiled = true\n  }\n\n  // functional template\n  if (functionalTemplate) {\n    options.functional = true\n  }\n\n  // scopedId\n  if (scopeId) {\n    options._scopeId = 'data-v-' + scopeId\n  }\n\n  var hook\n  if (moduleIdentifier) {\n    // server build\n    hook = function (context) {\n      // 2.3 injection\n      context =\n        context || // cached call\n        (this.$vnode && this.$vnode.ssrContext) || // stateful\n        (this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext) // functional\n      // 2.2 with runInNewContext: true\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__\n      }\n      // inject component styles\n      if (injectStyles) {\n        injectStyles.call(this, context)\n      }\n      // register component module identifier for async chunk inferrence\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier)\n      }\n    }\n    // used by ssr in case component is cached and beforeCreate\n    // never gets called\n    options._ssrRegister = hook\n  } else if (injectStyles) {\n    hook = shadowMode\n      ? function () {\n          injectStyles.call(\n            this,\n            (options.functional ? this.parent : this).$root.$options.shadowRoot\n          )\n        }\n      : injectStyles\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // for template-only hot-reload because in that case the render fn doesn't\n      // go through the normalizer\n      options._injectStyles = hook\n      // register for functional component in vue file\n      var originalRender = options.render\n      options.render = function renderWithStyleInjection(h, context) {\n        hook.call(context)\n        return originalRender(h, context)\n      }\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate\n      options.beforeCreate = existing ? [].concat(existing, hook) : [hook]\n    }\n  }\n\n  return {\n    exports: scriptExports,\n    options: options\n  }\n}\n"],"names":[],"sourceRoot":""}